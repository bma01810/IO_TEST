# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      POLARIS_SERVER_URL:  ${{ secrets.POLARIS_URL }}
      POLARIS_ACCESS_TOKEN:  ${{ secrets.POLARIS_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Synopsys Intelligent Security Scan
        id: prescription
        uses: synopsys-sig/intelligent-security-scan@v1
        with:
          ioServerUrl: ${{secrets.IO_SERVER_URL}}
          ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
          workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
          workflowServerToken: ${{secrets.WORKFLOW_SERVER_TOKEN}}
          additionalWorkflowArgs: "--persona=developer"
          stage: "IO"

      # Setup and Run Coverity on Polaris SAST
      - name: Polaris setup
        if: ${{steps.prescription.outputs.sastScan == 'true' }}
        run: |
          wget -q $POLARIS_SERVER_URL/api/tools/polaris_cli-linux64.zip
          unzip -j polaris_cli-linux64.zip -d /tmp
          /tmp/polaris install
      - name: Polaris scan
        run: /tmp/polaris analyze -w
        
      # Setup and Run Blackduck SCA
      #- name: Software Composition Analysis with Black Duck
      #  uses: blackducksoftware/github-action@v2
      #  with:
      #    args: '--blackduck.url="${{ secrets.BLACKDUCK_URL}}" --blackduck.api.token="${{ secrets.BLACKDUCK_TOKEN}}" --detect.tools="SIGNATURE_SCAN,DETECTOR" --detect.project.name="ALB-insecure-bank" --detect.project.version.name="1.0.1"'

      - name: Synopsys Intelligent Security Scan
        uses: synopsys-sig/intelligent-security-scan@v1
        with:
          ioServerUrl: ${{secrets.IO_SERVER_URL}}
          ioServerToken: ${{secrets.IO_SERVER_TOKEN}}
          workflowServerUrl: ${{secrets.WORKFLOW_SERVER_URL}}
          workflowServerToken: ${{secrets.WORKFLOW_SERVER_TOKEN}}
          additionalWorkflowArgs: "--IS_SAST_ENABLED=${{steps.prescription.outputs.sastScan}} --polaris.url=${{secrets.POLARIS_URL}} --polaris.token=${{secrets.POLARIS_TOKEN}}"
          stage: "WORKFLOW"

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: workflowengine-results.sarif.json
